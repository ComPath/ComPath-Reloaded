# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    # always keep coverage-clean first
    coverage-clean
    # code linters/stylers
    manifest
    flake8
    mypy
    pylint
    # documentation linters/checkers
    #doc8
    readme
    #docs
    # the actual tests
    py
    # always keep coverage-report last
    coverage-report

[testenv]
commands = coverage run -p -m pytest --durations=20 tests {posargs}
deps =
    coverage
    pytest
whitelist_externals =
    /bin/cat
    /bin/cp
    /bin/mkdir

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:manifest]
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-colors
    flake8-docstrings
    flake8-import-order
    pep8-naming
commands =
    flake8 src/pathme/ tests/ setup.py
description = Run the flake8 tool with several plugins (bandit, docstrings, import order, pep8 naming).

[testenv:mypy]
deps = mypy
skip_install = true
commands = mypy src/pathme --ignore-missing-imports
description = Run the mypy tool to check static typing on the project.

[testenv:pylint]
basepython = python3
deps =
    pyflakes
    pylint
commands =
    pylint src/pathme

[testenv:doc8]
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/ README.rst
description = Run the doc8 tool to check the style of the RST files in the project docs.

[testenv:readme]
commands = rst-lint README.rst
skip_install = true
deps =
    restructuredtext_lint
    pygments

[testenv:docs]
changedir = docs
deps =
    sphinx
    sphinx_rtd_theme
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report

[testenv:wikipathways-import]
commands =
    python3 -m pathme generate_statistics -d 'wikipathways' -v
